<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.mapper.OrderMapper">

	<select id="findByMaxOrderNumber" resultType="String">
		SELECT order_num
		FROM totalorder
		ORDER BY order_datetime DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 주문, 주문상세, (주문상세상태), 배송, 배송지, (결제카드정보) -->
	
	<!-- 주문 테이블 -->
	<insert id="insertOrder" parameterType="com.fa.plus.domain.Order">
		INSERT INTO totalorder (order_num, order_datetime, transport_date, order_delete, 
				order_total_money, shipping, order_sale, order_point, order_earn, total_amount, useridx)
		VALUES (totalorder_seq.NEXTVAL, SYSDATE, #{transport_date, jdbcType=VARCHAR},
				0, #{order_total_money}, 0, #{order_sale}, 0, 0, #{total_amount}, #{useridx})
	</insert>
	
	<!-- 카드 정보? -->
	<insert id="insertPayDetail" parameterType="com.fa.plus.domain.Order">
		
	</insert>

	<!-- 주문 상세 테이블 -->
	<insert id="insertOrderDetail" parameterType="com.fa.plus.domain.Order">
		INSERT INTO order_detail (od_num, order_num, detail_num1, detail_num2, od_price, od_count, 
				od_total_amount, change_num, product_num)
		VALUES (order_detail.seq.NEXTVAL, totalorder_seq.CURRVAL, #{detail_num1}, #{detail_num2},
				#{od_price}, #{od_count}, #{od_total_amount}, 0, #{product_num})
	</insert>

	<!-- 배송 + 배송지 -->
	<update id="insertOrderDelivery" parameterType="com.fa.plus.domain.Order">
		INSERT ALL
			INTO transports (order_num, cp_num, tracking_no, reception_datatime, 
					tr_status, completion_datetime, transports_memo)
				VALUES(totalorder_seq.CURRVAL, 1, #{tracking_no}, SYSDATE, 1, 
					#{completion_datetime, jdbcType=VARCHAR},
					#{transports_memo, jdbcType=VARCHAR})
			INTO delivery (order_num, address_num, address1, address2, recipient_name, recipient_phone)
				VALUES (totalorder_seq.CURRVAL, #{address_num}, #{address1}, 
					#{address2}, #{recipient_name}, #{recipient_phone})
		SELECT * FROM dual;
	</update>
	
	

	<select id="listProduct" parameterType="java.util.List" resultType="com.fa.plus.domain.Order">
		SELECT p.product_num, p.product_name, p.product_price, p.product_summary, 
				po.option_num, po.option_name, po.parent,
				od.detail_num, od.option_value,
				po2.option_num option_num2, po2.option_name option_name2,
    			od2.detail_num detail_num2, od2.option_value option_value2
		FROM product p
		JOIN productOption po ON p.product_num = po.product_num
		JOIN productOption po2 ON po.option_num = po2.parent
		JOIN optionDetail od ON po.option_num = od.option_num
		JOIN optionDetail od2 ON po2.option_num = od2.option_num
		WHERE (od.detail_num, od2.detail_num) IN
		<foreach collection="list" item="item" index="index"
			open="(" separator="," close=")">
			(#{item.detail_num1}, #{item.detail_num2})
		</foreach>
	</select>
	
	
	<select id="listProduct2" parameterType="java.util.List" resultType="com.fa.plus.domain.Order">
		SELECT p.product_num, p.product_name, p.product_price, p.product_summary, 
				po.option_num, po.option_name, po.parent,
				od.detail_num, od.option_value
		FROM product p
		JOIN productOption po ON p.product_num = po.product_num
		JOIN optionDetail od ON po.option_num = od.option_num
		WHERE (od.detail_num) IN
		<foreach collection="list" item="item" index="index"
			open="(" separator="," close=")">
			(#{item.detail_num1})
		</foreach>
	</select>

	<select id="findById" parameterType="Long" resultType="com.fa.plus.domain.Order">
		SELECT product_num, product_name, product_price
		FROM product
		WHERE product_num = #{product_num}
	</select>
	
	<select id="listOptionDetail" parameterType="java.util.List" resultType="com.fa.plus.domain.Order">
		SELECT detail_num, po.option_num, option_value, option_name
		FROM optionDetail od
		JOIN productOption po ON po.option_num = od.option_num
		WHERE po.option_num IN
		<foreach collection="list" item="detail_num" index="index"
			open="(" separator="," close=")">
			#{detail_num}
		</foreach>
	</select>
	
	<select id="findByDetailId" parameterType="Long" resultType="com.fa.plus.domain.Order">
		SELECT detail_num, po.option_num, option_value, option_name
		FROM optionDetail od
		JOIN productOption po ON po.option_num = od.option_num
		WHERE po.option_num = #{option_num}
	</select>
	
	<select id="findByMyInformation" parameterType="Long" resultType="com.fa.plus.domain.Order">
		SELECT user_name, addr1, addr2, zip, tel
		FROM user1 u1 
		JOIN user2 u2 ON u1.useridx = u2.useridx
		WHERE u1.useridx = #{useridx}
	</select>

</mapper>