<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.mapper.RecommendMapper">
	<!--
	<insert id="insertRecommend" parameterType="com.fa.plus.domain.Recommend">
		INSERT INTO Recommend(num, userId, subject, imageFilename, content, reg_date)
		VALUES (photo_seq.NEXTVAL, #{userId}, #{subject},  
			#{imageFilename}, #{content}, SYSDATE)
	</insert>
	-->
	<sql id="where-list">
		<if test="schType=='all' ">
			( INSTR(post_title, #{kwd}) &gt; 0 
				OR DBMS_LOB.INSTR(post_content, #{kwd}) &gt; 0)
		</if>
		<if test="schType=='post_title' ">
			INSTR(post_title, #{kwd}) &gt;0
		</if>
		<if test="schType=='post_content' ">
			DBMS_LOB.INSTR( post_content, #{kwd}) &gt; 0 
		</if>
		<if test="schType=='user_name' ">
			INSTR(user_name, #{kwd}) &gt;0
		</if>
		<if test="schType=='post_reg_date' ">
			( TO_CHAR(post_reg_date, 'YYYY-MM-DD') = #{kwd}
				OR TO_CHAR(post_reg_date, 'YYYYMMDD') = #{kwd} )
		</if>
		
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM post p
		JOIN user1 m ON p.post_reg_id = m.useridx
		<where>
			<if test="kwd!=null and kwd!='' ">
				<include refid="where-list"/>
			</if>
			AND community_category_num=1
		</where>	
	</select>
	
	<select id="listRecommend" parameterType="map" resultType="com.fa.plus.domain.Recommend">
	    SELECT p.post_num, p.post_reg_id, user_name, post_title, post_hit_count, post_content,
	           TO_CHAR(post_reg_date, 'yyyy-mm-dd') as post_reg_date,
	           NVL(f.post_fileCount, 0) as post_fileCount,
	           NVL(c.replyCount, 0) as replyCount,
	           f.originalFilename
	    FROM post p
	    JOIN user1 m ON p.post_reg_id = m.useridx
	    LEFT OUTER JOIN (
	        SELECT post_num, COUNT(*) as post_fileCount, MAX(file_num) as file_num,
	         MAX(originalFilename) KEEP (DENSE_RANK FIRST ORDER BY file_num) as originalFilename
	        FROM post_file
	        GROUP BY post_num
	    ) f ON p.post_num = f.post_num
	    LEFT OUTER JOIN (
	        SELECT post_num, COUNT(*) as replyCount FROM reply
	        WHERE reply_visible = 1
	        GROUP BY post_num
	    ) c ON p.post_num = c.post_num
	    <where>
		    <if test="kwd != null and kwd != ''">
		        <include refid="where-list"/>
		    </if>
		    AND community_category_num=1
		</where>
	    ORDER BY p.post_num DESC
	    OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>


	<!-- 글보기 -->
	<select id="findById" parameterType="Long" resultType="com.fa.plus.domain.Recommend">
		SELECT post_num, p.post_reg_id, user_name, post_title, post_hit_count,
			post_content, post_reg_date
		FROM post p
		JOIN user1 m ON p.post_reg_id = m.useridx
		WHERE post_num=#{num}
	</select>

	 
	
	<update id="updateHitCount" parameterType="Long">
		UPDATE post SET post_hit_count=post_hit_count+1 WHERE post_num = #{num}
	</update>
	
	
	<!-- 이전글 -->
	<select id="findByPrev" parameterType="map" resultType="com.fa.plus.domain.Recommend">
		SELECT post_num, post_title
		FROM post p
		JOIN user1 m ON p.post_reg_id = m.useridx
		
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
			AND (post_num &gt; #{num})
		</where>
		 
		ORDER BY post_num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 다음글 -->
	<select id="findByNext" parameterType="map" resultType="com.fa.plus.domain.Recommend">
		SELECT post_num, post_title
		FROM post p
		JOIN user1 m ON p.post_reg_id = m.useridx
		 
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
			AND (post_num &lt; #{num})
		</where>
		 
		ORDER BY post_num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	<!--
	<update id="updatePhoto" parameterType="com.sp.app.domain.Photo">
		UPDATE photo SET subject=#{subject}, imageFilename=#{imageFilename},
			content=#{content}
		WHERE num=#{num}
	</update>
	
	<delete id="deletePhoto" parameterType="Long">
		DELETE FROM photo WHERE num=#{num}
	</delete>
	 -->
</mapper>